import { AppContext } from "next/app";
import Head from "next/head";
import { useState } from "react";
import SelectCheckbox from "../components/SelectOption/SelectCheckbox";
import styles from "../styles/Home.module.css";
import { CarType, getCarsByBrand } from "../utils/API/carBrands";

const CAR_BRANDS = [
  "Audi",
  "Mitsubishi",
  "Volkswagen",
  "Kia",
  "Honda",
  "Hyundai",
] as const;
const initBrands = (brands: typeof CAR_BRANDS) =>
  brands.reduce((obj, cur) => ({ ...obj, [cur]: true }), {});

const Home = ({ list }: PageProps) => {
  const [items, setItems] = useState<{ [brand in string]: boolean }>(
    initBrands(CAR_BRANDS)
  );

  const changeAllItems = (value: boolean) =>
    setItems((items) => ({
      ...Object.entries(items).reduce(
        (newItems, [brand]) => ({ ...newItems, [brand]: value }),
        {}
      ),
    }));
  console.log(list);

  return (
    <div className={styles.container}>
      <Head>
        <title>Maximum</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <SelectCheckbox
          title="Марка"
          onChange={(newValue, name) =>
            setItems((items) => ({ ...items, [name]: newValue }))
          }
          items={items}
        />
        <div>
          {list &&
            Object.entries(items).map(([brand, show]) => {
              if (!show) return null;
              return list[brand].map(
                ({ _id, feedData: { brandName, modelName } }) => (
                  <div
                    className={styles.card}
                    key={_id}
                  >{`${brandName} ${modelName}`}</div>
                )
              );
            })}
        </div>
      </main>
    </div>
  );
};

export default Home;

type PageProps = { list: { [brand in string]: CarType[] } };

export async function getServerSideProps() {
  let list: PageProps["list"] = {};

  await Promise.all(
    CAR_BRANDS.map(async (brand) => {
      const data = await getCarsByBrand(brand);
      list[brand] = data.list;
      return;
    })
  );

  return {
    props: {
      list,
    },
  };
}
